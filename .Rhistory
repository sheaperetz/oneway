oneway(mpg ~ cyl, mtcars)
oneway <- function(formula,data, ...){
#want to take a numeric outcome (quant response) and a cateogorical variable
#delete missing data
data <- na.omit(data)
fit <-lm(formula, data)
#summary statistics
stats <- aggregate(formula, data,
function(x) c(n=length(x),
mean=mean(x),
sd=sd(x)))
#return results
result <- list(anova = fit, summarystats = stats)
return(result)
}
oneway(mpg ~ cyl, mtcars)
oneway(mpg ~ cyl, mtcars)
oneway <- function(formula,data, ...){
#want to take a numeric outcome (quant response) and a cateogorical variable
#delete missing data
data <- na.omit(data)
fit <-lm(formula, data)
#summary statistics
stats <- aggregate(formula, data,
function(x) c(n=length(x),
mean=mean(x),
sd=sd(x)))
#return results
result <- list(anova = fit, summarystats = stats)
return(result)
}
oneway(mpg ~ cyl, mtcars)
oneway <- function(formula,data, ...){
#want to take a numeric outcome (quant response) and a cateogorical variable
#delete missing data
data <- na.omit(data)
#anova
fit <-lm(formula, data)
#summary statistics
stats <- aggregate(formula, data,
function(x) c(n=length(x),
mean=mean(x),
sd=sd(x)))
#return results
result <- list(anova = fit, summarystats = stats)
return(result)
}
oneway(mpg ~ cyl, mtcars)
oneway <- function(formula,data, ...){
#want to take a numeric outcome (quant response) and a cateogorical variable
#delete missing data
data <- na.omit(data)
#anova
fit <-lm(formula, data)
#summary statistics
stats <- aggregate(formula, data,
function(x) c(n=length(x),
mean=mean(x),
sd=sd(x)))
#return results
result <- list(anova = fit, summarystats = stats)
class(result) <- "oneway"
return(result)
}
oneway(mpg ~ cyl, mtcars)
x <- oneway(mpg ~ cyl, mtcars)
class(x)
oneway
x
oneway <- function(formula,data, ...){
#want to take a numeric outcome (quant response) and a cateogorical variable
#delete missing data
data <- na.omit(data)
#anova
fit <-lm(formula, data)
#summary statistics
stats <- aggregate(formula, data,
function(x) c(n=length(x),
mean=mean(x),
sd=sd(x)))
#return results
result <- list(anova = fit, summarystats = stats)
class(result) <- "oneway"
return(result)
}
usethis::use_mit_license(name="Shea Peretz")
rm(oneway)
rm(oneway)
library(oneway)
library(oneway)
use_readme_md()
use_readme()
library(usethis)
use_readme_md()
library(pkgdown)
install.packages("pkgdown")
library(pkgdown)
library(pkgdown)
build_site()
.Last.error.trace
library(oneway)
build.site()
build_site()
library(oneway)
library(oneway)
build_site()
library(oneway)
build_site()
library(oneway)
build_site()
getwd()
library(pkgdown)
build_site()
?oneway
library(oneway)
?oneway
fit <- oneway(mpg~cyl, mtcars)
names(fit)
fit$anova
summary(fit$anova)
fit$summarystats
print.oneway <- function(x, ...){
cat("Summary Statistics",
print(x$summarystats, ...))
cat("Anova",
print(summary.lm(x$anova)))
}
library(oneway)
?print.oneway
mileage <- oneway(mpg~cyl,mtcars)
print(mileage)
mileage$summarystats
class(mileage$summarystats)
summary.lm(mileage$anova)
class(summary.lm(mileage$anova))
#' print.oneway prints one-way ANOVA results
#'
#' @param x an object of class oneway.
#' @param ... additional arguments passed to the function.
#'
#' @return the input object is returned silently
#' @export
#' @examples
#' mileage <- oneway(mpg ~ cyl, mtcars)
#' print(mileage)
print.oneway <- function(x, ...){
cat("Summary Statistics")
#,
#   print(x$summarystats, ...))
#cat("Anova",
#  print(summary.lm(x$anova)))
}
print.oneway(mileage)
#' print.oneway prints one-way ANOVA results
#'
#' @param x an object of class oneway.
#' @param ... additional arguments passed to the function.
#'
#' @return the input object is returned silently
#' @export
#' @examples
#' mileage <- oneway(mpg ~ cyl, mtcars)
#' print(mileage)
print.oneway <- function(x, ...){
cat("Summary Statistics", print(x$summarystats, ...))
#cat("Anova",
#  print(summary.lm(x$anova)))
}
print.oneway(mileage)
#' print.oneway prints one-way ANOVA results
#'
#' @param x an object of class oneway.
#' @param ... additional arguments passed to the function.
#'
#' @return the input object is returned silently
#' @export
#' @examples
#' mileage <- oneway(mpg ~ cyl, mtcars)
#' print(mileage)
print.oneway <- function(x, ...){
cat("Summary Statistics")
print(x$summarystats, ...))
cat("Anova")
print(summary.lm(x$anova)))
}
#' print.oneway prints one-way ANOVA results
#'
#' @param x an object of class oneway.
#' @param ... additional arguments passed to the function.
#'
#' @return the input object is returned silently
#' @export
#' @examples
#' mileage <- oneway(mpg ~ cyl, mtcars)
#' print(mileage)
print.oneway <- function(x, ...){
cat("Summary Statistics")
print(x$summarystats, ...))
cat("Anova")
print(summary.lm(x$anova))
}
#' print.oneway prints one-way ANOVA results
#'
#' @param x an object of class oneway.
#' @param ... additional arguments passed to the function.
#'
#' @return the input object is returned silently
#' @export
#' @examples
#' mileage <- oneway(mpg ~ cyl, mtcars)
#' print(mileage)
print.oneway <- function(x, ...){
cat("Summary Statistics")
print(x$summarystats, ...))
cat("Anova")
print(summary.lm(x$anova))
}
print(summary.lm(x$anova))}
#' print.oneway prints one-way ANOVA results
#'
#' @param x an object of class oneway.
#' @param ... additional arguments passed to the function.
#'
#' @return the input object is returned silently
#' @export
#' @examples
#' mileage <- oneway(mpg ~ cyl, mtcars)
#' print(mileage)
print.oneway <- function(x, ...){
cat("Summary Statistics")
print(x$summarystats, ...))
cat("Anova")
print(summary.lm(x$anova))
}
#' print.oneway prints one-way ANOVA results
#'
#' @param x an object of class oneway.
#' @param ... additional arguments passed to the function.
#'
#' @return the input object is returned silently
#' @export
#' @examples
#' mileage <- oneway(mpg ~ cyl, mtcars)
#' print(mileage)
print.oneway <- function(x, ...){
cat("Summary Statistics")
print(x$summarystats, ...)
cat("Anova")
print(summary.lm(x$anova))
}
print.oneway(mileage)
#' print.oneway prints one-way ANOVA results
#'
#' @param x an object of class oneway.
#' @param ... additional arguments passed to the function.
#'
#' @return the input object is returned silently
#' @export
#' @examples
#' mileage <- oneway(mpg ~ cyl, mtcars)
#' print(mileage)
print.oneway <- function(x, ...){
cat("Summary Statistics\n")
print(x$summarystats, ...)
cat("Anova\n")
print(summary.lm(x$anova))
}
print.oneway(mileage)
#' print.oneway prints one-way ANOVA results
#'
#' @param x an object of class oneway.
#' @param ... additional arguments passed to the function.
#'
#' @return the input object is returned silently
#' @export
#' @examples
#' mileage <- oneway(mpg ~ cyl, mtcars)
#' print(mileage)
print.oneway <- function(x, ...){
cat("Summary Statistics\n",
"==================\n")
print(x$summarystats, ...)
cat("Anova\n",
"==================\n")
print(summary.lm(x$anova))
}
print.oneway(mileage)
?cat
print.oneway(mtcars)
print.oneway <- function(x, ...){
if(!inherits(x, "oneway"))
stop("Must be class 'oneway'")
cat("Summary Statistics\n",
"==================\n")
print(x$summarystats, ...)
cat("Anova\n",
"==================\n")
print(summary.lm(x$anova))
}
print.oneway(mtcars)
library(oneway)
View(mileage)
mileage$anova
names(mileage$anova)
mileage$anova$terms
mileage$anova$model # data frame
boxplot(mileage$anova$terms, mileage$anova$model)
plot.oneway <- function(x, ...){
if(!inherits(x,"oneway"))
stop("Must be class 'oneway'")
boxplot(x$anova$terms, x$anova$model)
}
library(oneway)
?plot.oneway
plot(mileage)
#' Plot one-way ANOVA
#'
#' plot.oneway creates group comparisons for a one-way ANOVA
#'
#' @param x an object of class oneway.
#' @param ... additional arguments passed to boxplot.
#'
#' @export
#'
#' @return NULL
#'
#' @examples
#' mileage <- oneway(mpg ~ cyl, mtcars)
#' plot(mileage)
plot.oneway <- function(x, ...){
if(!inherits(x,"oneway"))
stop("Must be class 'oneway'")
boxplot(x$anova$terms, x$anova$model)
}
library(oneway)
?plot.oneway
mileage$anova
anova(mileage$anova)
summary.oneway <- function(x, ...){
if(!inherits(x,"oneway"))
stop("Must be class 'oneway'")
anova(x$anova)
}
library(oneway)
#' summary.oneway summarizes the results of the one-way ANOVA
#'
#' @param x an object of class oneway.
#'
#' @export
#'
#' @return RETURN_DESCRIPTION
#' @examples
#' mileage <- oneway(mpg ~ cyl, mtcars)
#' summary(mileage)
summary.oneway <- function(x){
if(!inherits(x,"oneway"))
stop("Must be class 'oneway'")
anova(x$anova)
}
summary.oneway <- function(x){
if(!inherits(x,"oneway"))
stop("Must be class 'oneway'")
anova(x$anova)
}
y <- summary(mileage)
class(y)
library(oneway)
?summary.oneway
$git add .
$ git add .
library(pkgdown)
build_site()
library(pkgdown)
build_site()
library(oneway)
library(pkgdown)
build_site()
build_site()
build_site()
library(testthat)
library(usethis)
use_vignette("oneway")
build_site()
library(ggplot2)
cars <- mpg[c("hwy","class", "year")]
View(cars)
use_data(cars)
library(oneway)
?cars
build_site()
fit <- oneway(mpg~carb, mtcars)
fit
mtcars %>%
group_by(cyl) %>%
summarise(mean= mean(mpg), sd=sd(mpg), count= count(mpg))
#write a short program using dplyr
#to get n, mean, sd for mpg
#by cyl inh the mtcars dataframe
library(dplyr)
mtcars %>%
group_by(cyl) %>%
summarise(mean= mean(mpg), sd=sd(mpg), count= count(mpg))
mtcars %>%
group_by(cyl) %>%
summarise(mean= mean(mpg), sd=sd(mpg))
mtcars %>%
group_by(cyl) %>%
summarise(mean= mean(mpg), sd=sd(mpg), count=count(mpg))
mtcars %>%
group_by(cyl) %>%
summarise(mean= mean(mpg), sd=sd(mpg), count=n(mpg))
mtcars %>%
group_by(cyl) %>%
summarise(mean= mean(mpg), sd=sd(mpg), count=n())
mtcars %>%
group_by(cyl) %>%
summarise(n= n(),
mean= mean(mpg),
sd = sd(mpg))
mystats <- function(data, group, y){
require(dplyr)
data %>%
group_by(.data[[group]]) %>%
summarise(n= n(),
mean= mean(.data[[y]]),
sd = sd(.data[[y]]))
}
mystats(mtcars, g="cyl", y="mpg")
mystats <- function(data, group, y){
require(dplyr)
data %>%
group_by(.data[[group]]) %>%
summarise(n= n(),
mean= mean(.data[[y]]),
sd = sd(.data[[y]])) %>%
as.data.frame()
}
mystats(mtcars, g="cyl", y="mpg")
mystats(mtcars, g="cyl", y="mpg")
}
mystats <- function(data, group, y){
require(dplyr)
group <- enquo(group)
y <- enquo(y)
data %>%
group_by(!!group) %>%
summarise(n= n(),
mean= mean(!!y),
sd = sd(!!y) %>%
as.data.frame())
}
mystats <- function(formula, data){
require(dplyr)
group <- as.character(formula[[3]])
y <- as.character(formula[[2]])
data %>%
group_by(.data[[group]]) %>%
summarise(n= n(),
mean= mean(.data[[y]]),
sd = sd(.data[[y]]) %>%
as.data.frame())
}
library(oneway)
fit <- oneway(mpg ~ cyl, mtcars)
fit
library(oneway)
fit <- oneway(mpg ~ cyl, mtcars)
fit
library(crayon)
install.packages("crayon")
install.packages("crayon")
install.packages("crayon")
library(crayon)
red$bold$underline("Summary Statistics")
library(oneway)
fit
build_site()
library(pkgdown)
build_site()
#' @param formula an object of class formula relating the dependent variable
#' to the grouping variable.
#' @param data a data frame containing the variables in the model.
#'
#' @import dplyr
#'
#' @export
#' @return a list with 2 elements.
#' @examples
#' mileage <- oneway(mpg ~ cyl, mtcars)
oneway <- function(formula,data){
#want to take a numeric outcome (quant response) and a cateogorical variable
#delete missing data
data <- na.omit(data)
#anova
fit <-lm(formula, data)
#summary statistics
group <- as.character(formula[[3]])
y <- as.character(formula[[2]])
stats <- data %>%
group_by(.data[[group]]) %>%
summarise(n= n(),
mean= mean(.data[[y]]),
sd = sd(.data[[y]]) %>%
as.data.frame())
#return results
result <- list(anova = fit, summarystats = stats)
class(result) <- "oneway"
return(result)
}
library(oneway)
build_site()
build_site()
