data(mtcars)
table(mtcars$cyl)
table(cyl)
source('~/.active-rstudio-document', echo=TRUE)
tapply(mpg,cyl,mean)
tapply(data=mtcars,mpg,cyl,mean)
tapply(mtcars,mpg,cyl,mean)
mtcars %>%  tapply(mpg,cyl,mean)
newtable <- mtcars[tapply(mpg, cyl, sd, mean)]
stats(mtcars$mpg)
is.factor(mtcars$cyl)
mtcars$cyl()
?sapply
?split
tapply(mtcars[mpg,cyl])
tapply(mtcars["mpg","cyl"])
tapply(mtcars$cyl)
tapply(cyl)
slice(mtcars$cyl)
split(mtcars$cyl)
aggregate(mpg~am+cyl,data=mtcars,mean)
aggregate(mpg~cyl,data=mtcars,mean)
aggregate(mpg~cyl,data=mtcars,mean, sd)
aggregate(mpg~cyl,data=mtcars,mean)
tapply(mtcars$mpg, mtcars$cyl, mean)
tapply(mtcars$cyl, mtcars$mpg, mean)
aggregate(mpg~cyl,data=mtcars,mean)
by(mtcars$mpg, mtcars$cyl, stats)
aggregate(mpg~cyl,data=mtcars,mean)
aggregate(mpg~cyl,data=mtcars,stats)
aggregate(mpg~cyl,data=mtcars,stats)
?aggregate
aggregate(mpg~cyl,data=mtcars,mean)
aggregate(mpg~cyl,data=mtcars,stat)
aggregate(mpg~cyl,data=mtcars,stats)
split(mtcars$mpg, factor(mtcars$cyl))
aggregate(mpg~cyl,mtcars,
function(x) c(n=length), mean=mean(x), sd=sd(x)))
aggregate(mpg~cyl,mtcars,
function(x) c(n=length), mean=mean(x), sd=sd(x))
aggregate(mpg~cyl,mtcars,
function(x) c(n=length(x), mean=mean(x), sd=sd(x)))
oneway <- function(formula,dataframe, ...){
#want to take a numeric outcome (quant response) and a cateogorical variable
#anova
fit <-lm(formula, data)
#summary statistics
stats <- aggregate(formula, data,
function(x) c(n=length(x),
mean=mean(x),
sd=sd(x)))
#return results
result <- list(anova = fit, summarystats = stats)
return(result)
}
oneway(mpg ~ cyl, mtcars)
oneway(mpg ~ cyl, mtcars)
oneway <- function(formula,data, ...){
#want to take a numeric outcome (quant response) and a cateogorical variable
#anova
fit <-lm(formula, data)
#summary statistics
stats <- aggregate(formula, data,
function(x) c(n=length(x),
mean=mean(x),
sd=sd(x)))
#return results
result <- list(anova = fit, summarystats = stats)
return(result)
}
oneway(mpg ~ cyl, mtcars)
oneway <- function(formula,data, ...){
#want to take a numeric outcome (quant response) and a cateogorical variable
#delete missing data
data <- na.omit(data)
fit <-lm(formula, data)
#summary statistics
stats <- aggregate(formula, data,
function(x) c(n=length(x),
mean=mean(x),
sd=sd(x)))
#return results
result <- list(anova = fit, summarystats = stats)
return(result)
}
oneway(mpg ~ cyl, mtcars)
oneway(mpg ~ cyl, mtcars)
oneway <- function(formula,data, ...){
#want to take a numeric outcome (quant response) and a cateogorical variable
#delete missing data
data <- na.omit(data)
fit <-lm(formula, data)
#summary statistics
stats <- aggregate(formula, data,
function(x) c(n=length(x),
mean=mean(x),
sd=sd(x)))
#return results
result <- list(anova = fit, summarystats = stats)
return(result)
}
oneway(mpg ~ cyl, mtcars)
oneway <- function(formula,data, ...){
#want to take a numeric outcome (quant response) and a cateogorical variable
#delete missing data
data <- na.omit(data)
#anova
fit <-lm(formula, data)
#summary statistics
stats <- aggregate(formula, data,
function(x) c(n=length(x),
mean=mean(x),
sd=sd(x)))
#return results
result <- list(anova = fit, summarystats = stats)
return(result)
}
oneway(mpg ~ cyl, mtcars)
oneway <- function(formula,data, ...){
#want to take a numeric outcome (quant response) and a cateogorical variable
#delete missing data
data <- na.omit(data)
#anova
fit <-lm(formula, data)
#summary statistics
stats <- aggregate(formula, data,
function(x) c(n=length(x),
mean=mean(x),
sd=sd(x)))
#return results
result <- list(anova = fit, summarystats = stats)
class(result) <- "oneway"
return(result)
}
oneway(mpg ~ cyl, mtcars)
x <- oneway(mpg ~ cyl, mtcars)
class(x)
oneway
x
oneway <- function(formula,data, ...){
#want to take a numeric outcome (quant response) and a cateogorical variable
#delete missing data
data <- na.omit(data)
#anova
fit <-lm(formula, data)
#summary statistics
stats <- aggregate(formula, data,
function(x) c(n=length(x),
mean=mean(x),
sd=sd(x)))
#return results
result <- list(anova = fit, summarystats = stats)
class(result) <- "oneway"
return(result)
}
usethis::use_mit_license(name="Shea Peretz")
rm(oneway)
rm(oneway)
library(oneway)
library(oneway)
use_readme_md()
use_readme()
library(usethis)
use_readme_md()
library(pkgdown)
install.packages("pkgdown")
library(pkgdown)
library(pkgdown)
build_site()
.Last.error.trace
library(oneway)
build.site()
build_site()
library(oneway)
library(oneway)
build_site()
library(oneway)
build_site()
library(oneway)
build_site()
getwd()
library(pkgdown)
build_site()
?oneway
library(oneway)
?oneway
fit <- oneway(mpg~cyl, mtcars)
names(fit)
fit$anova
summary(fit$anova)
fit$summarystats
print.oneway <- function(x, ...){
cat("Summary Statistics",
print(x$summarystats, ...))
cat("Anova",
print(summary.lm(x$anova)))
}
library(oneway)
?print.oneway
mileage <- oneway(mpg~cyl,mtcars)
print(mileage)
mileage$summarystats
class(mileage$summarystats)
summary.lm(mileage$anova)
class(summary.lm(mileage$anova))
#' print.oneway prints one-way ANOVA results
#'
#' @param x an object of class oneway.
#' @param ... additional arguments passed to the function.
#'
#' @return the input object is returned silently
#' @export
#' @examples
#' mileage <- oneway(mpg ~ cyl, mtcars)
#' print(mileage)
print.oneway <- function(x, ...){
cat("Summary Statistics")
#,
#   print(x$summarystats, ...))
#cat("Anova",
#  print(summary.lm(x$anova)))
}
print.oneway(mileage)
#' print.oneway prints one-way ANOVA results
#'
#' @param x an object of class oneway.
#' @param ... additional arguments passed to the function.
#'
#' @return the input object is returned silently
#' @export
#' @examples
#' mileage <- oneway(mpg ~ cyl, mtcars)
#' print(mileage)
print.oneway <- function(x, ...){
cat("Summary Statistics", print(x$summarystats, ...))
#cat("Anova",
#  print(summary.lm(x$anova)))
}
print.oneway(mileage)
#' print.oneway prints one-way ANOVA results
#'
#' @param x an object of class oneway.
#' @param ... additional arguments passed to the function.
#'
#' @return the input object is returned silently
#' @export
#' @examples
#' mileage <- oneway(mpg ~ cyl, mtcars)
#' print(mileage)
print.oneway <- function(x, ...){
cat("Summary Statistics")
print(x$summarystats, ...))
cat("Anova")
print(summary.lm(x$anova)))
}
#' print.oneway prints one-way ANOVA results
#'
#' @param x an object of class oneway.
#' @param ... additional arguments passed to the function.
#'
#' @return the input object is returned silently
#' @export
#' @examples
#' mileage <- oneway(mpg ~ cyl, mtcars)
#' print(mileage)
print.oneway <- function(x, ...){
cat("Summary Statistics")
print(x$summarystats, ...))
cat("Anova")
print(summary.lm(x$anova))
}
#' print.oneway prints one-way ANOVA results
#'
#' @param x an object of class oneway.
#' @param ... additional arguments passed to the function.
#'
#' @return the input object is returned silently
#' @export
#' @examples
#' mileage <- oneway(mpg ~ cyl, mtcars)
#' print(mileage)
print.oneway <- function(x, ...){
cat("Summary Statistics")
print(x$summarystats, ...))
cat("Anova")
print(summary.lm(x$anova))
}
print(summary.lm(x$anova))}
#' print.oneway prints one-way ANOVA results
#'
#' @param x an object of class oneway.
#' @param ... additional arguments passed to the function.
#'
#' @return the input object is returned silently
#' @export
#' @examples
#' mileage <- oneway(mpg ~ cyl, mtcars)
#' print(mileage)
print.oneway <- function(x, ...){
cat("Summary Statistics")
print(x$summarystats, ...))
cat("Anova")
print(summary.lm(x$anova))
}
#' print.oneway prints one-way ANOVA results
#'
#' @param x an object of class oneway.
#' @param ... additional arguments passed to the function.
#'
#' @return the input object is returned silently
#' @export
#' @examples
#' mileage <- oneway(mpg ~ cyl, mtcars)
#' print(mileage)
print.oneway <- function(x, ...){
cat("Summary Statistics")
print(x$summarystats, ...)
cat("Anova")
print(summary.lm(x$anova))
}
print.oneway(mileage)
#' print.oneway prints one-way ANOVA results
#'
#' @param x an object of class oneway.
#' @param ... additional arguments passed to the function.
#'
#' @return the input object is returned silently
#' @export
#' @examples
#' mileage <- oneway(mpg ~ cyl, mtcars)
#' print(mileage)
print.oneway <- function(x, ...){
cat("Summary Statistics\n")
print(x$summarystats, ...)
cat("Anova\n")
print(summary.lm(x$anova))
}
print.oneway(mileage)
#' print.oneway prints one-way ANOVA results
#'
#' @param x an object of class oneway.
#' @param ... additional arguments passed to the function.
#'
#' @return the input object is returned silently
#' @export
#' @examples
#' mileage <- oneway(mpg ~ cyl, mtcars)
#' print(mileage)
print.oneway <- function(x, ...){
cat("Summary Statistics\n",
"==================\n")
print(x$summarystats, ...)
cat("Anova\n",
"==================\n")
print(summary.lm(x$anova))
}
print.oneway(mileage)
?cat
print.oneway(mtcars)
print.oneway <- function(x, ...){
if(!inherits(x, "oneway"))
stop("Must be class 'oneway'")
cat("Summary Statistics\n",
"==================\n")
print(x$summarystats, ...)
cat("Anova\n",
"==================\n")
print(summary.lm(x$anova))
}
print.oneway(mtcars)
library(oneway)
View(mileage)
mileage$anova
names(mileage$anova)
mileage$anova$terms
mileage$anova$model # data frame
boxplot(mileage$anova$terms, mileage$anova$model)
plot.oneway <- function(x, ...){
if(!inherits(x,"oneway"))
stop("Must be class 'oneway'")
boxplot(x$anova$terms, x$anova$model)
}
library(oneway)
?plot.oneway
plot(mileage)
#' Plot one-way ANOVA
#'
#' plot.oneway creates group comparisons for a one-way ANOVA
#'
#' @param x an object of class oneway.
#' @param ... additional arguments passed to boxplot.
#'
#' @export
#'
#' @return NULL
#'
#' @examples
#' mileage <- oneway(mpg ~ cyl, mtcars)
#' plot(mileage)
plot.oneway <- function(x, ...){
if(!inherits(x,"oneway"))
stop("Must be class 'oneway'")
boxplot(x$anova$terms, x$anova$model)
}
library(oneway)
?plot.oneway
mileage$anova
anova(mileage$anova)
summary.oneway <- function(x, ...){
if(!inherits(x,"oneway"))
stop("Must be class 'oneway'")
anova(x$anova)
}
library(oneway)
#' summary.oneway summarizes the results of the one-way ANOVA
#'
#' @param x an object of class oneway.
#'
#' @export
#'
#' @return RETURN_DESCRIPTION
#' @examples
#' mileage <- oneway(mpg ~ cyl, mtcars)
#' summary(mileage)
summary.oneway <- function(x){
if(!inherits(x,"oneway"))
stop("Must be class 'oneway'")
anova(x$anova)
}
summary.oneway <- function(x){
if(!inherits(x,"oneway"))
stop("Must be class 'oneway'")
anova(x$anova)
}
y <- summary(mileage)
class(y)
library(oneway)
?summary.oneway
$git add .
$ git add .
library(pkgdown)
build_site()
library(pkgdown)
build_site()
